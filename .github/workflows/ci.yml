name: Backend CI

on:
  pull_request:
    branches: [ "main" ]
  push:
    branches: [ "main" ]

jobs:
  api:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: services/api

    services:
      db:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: titanpark
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d titanpark"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: services/api/requirements.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run migrations (Alembic)
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: "5432"
          DB_USER: postgres
          DB_PASS: postgres
          DB_NAME: titanpark
        run: alembic upgrade head

      - name: Run tests (if any)
        run: |
          if find . -maxdepth 3 -type f \( -name "test_*.py" -o -name "*_test.py" \) | grep -q .; then
            pytest -q
          else
            echo "No tests found; skipping."
          fi
